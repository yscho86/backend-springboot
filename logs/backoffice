2021-11-25 14:40:57 --- Starting Application using Java 11.0.13 on sontaeiiMacmini.localdomain with PID 97713 (/Users/sontaeil/Desktop/backend-springboot/build/classes/java/main started by sontaeil in /Users/sontaeil/Desktop/backend-springboot) 
2021-11-25 14:40:57 --- Running with Spring Boot v2.5.5, Spring v5.3.10 
2021-11-25 14:40:57 --- The following profiles are active: dev 
2021-11-25 14:40:57 --- Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2021-11-25 14:40:57 --- For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2021-11-25 14:40:57 --- Multiple Spring Data modules found, entering strict repository configuration mode! 
2021-11-25 14:40:57 --- Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
2021-11-25 14:40:57 --- Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces. 
2021-11-25 14:40:58 --- Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$56e4b3a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2021-11-25 14:40:58 --- Supporting [WS-Addressing August 2004, WS-Addressing 1.0] 
2021-11-25 14:40:58 --- Tomcat initialized with port(s): 8080 (http) 
2021-11-25 14:40:58 --- Initializing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:40:58 --- Starting service [Tomcat] 
2021-11-25 14:40:58 --- Starting Servlet engine: [Apache Tomcat/9.0.53] 
2021-11-25 14:40:58 --- Initializing Spring embedded WebApplicationContext 
2021-11-25 14:40:58 --- Root WebApplicationContext: initialization completed in 1288 ms 
2021-11-25 14:40:58 --- Filter 'httpServletWrappingFilter' configured for use 
2021-11-25 14:40:58 --- HikariPool-1 - Starting... 
2021-11-25 14:40:58 --- HikariPool-1 - Start completed. 
2021-11-25 14:40:59 --- [JwtAuthTokenProvider.<init>():30] base64Secret: Z3J1bS5jYy5iYWNrZW5kLmp3dC5zZWN1cmUua2V5LlozSjFiUzVqWXk1aVlXTnJaVzVrTG1wM2RDNXpaV04xY21VdWEyVjU= 
2021-11-25 14:40:59 --- [JwtAuthTokenProvider.<init>():31] keyBytes: [103, 114, 117, 109, 46, 99, 99, 46, 98, 97, 99, 107, 101, 110, 100, 46, 106, 119, 116, 46, 115, 101, 99, 117, 114, 101, 46, 107, 101, 121, 46, 90, 51, 74, 49, 98, 83, 53, 106, 89, 121, 53, 105, 89, 87, 78, 114, 90, 87, 53, 107, 76, 109, 112, 51, 100, 67, 53, 122, 90, 87, 78, 49, 99, 109, 85, 117, 97, 50, 86, 53] 
2021-11-25 14:40:59 --- [SecurityConfig.passwordEncoder():79] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:40:59 --- [RedisConfiguration.redisConnectionFactory():23] host : localhost, port : 6379 
2021-11-25 14:40:59 --- [SecurityConfig.configure():43] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:40:59 --- Will secure Ant [pattern='/**', OPTIONS] with [] 
2021-11-25 14:40:59 --- Will secure Ant [pattern='/'] with [] 
2021-11-25 14:40:59 --- Will secure Ant [pattern='/front/**'] with [] 
2021-11-25 14:40:59 --- Will secure any request with [org.springframework..web.context.request.async.WebAsyncManagerIntegrationFilter@63a53e1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@45723de8, org.springframework.security.web.header.HeaderWriterFilter@b020e6c, org.springframework.security.web.authentication.logout.LogoutFilter@5e7483cc, cc.grum.base.backendspringboot.config.security.JwtRequestFilter@15336a3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4dcafce0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d6c6aa7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f9109d1, org.springframework.security.web.session.SessionManagementFilter@17d53247, org.springframework.security.web.access.ExceptionTranslationFilter@159587a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6bcce4ee]
2021-11-25 14:40:59 --- Unable to start LiveReload server 
2021-11-25 14:40:59 --- Starting ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:40:59 --- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use 
2021-11-25 14:40:59 --- HikariPool-1 - Shutdown initiated... 
2021-11-25 14:40:59 --- HikariPool-1 - Shutdown completed. 
2021-11-25 14:40:59 --- Pausing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:40:59 --- Stopping service [Tomcat] 
2021-11-25 14:40:59 --- Stopping ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:40:59 --- Destroying ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:40:59 --- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2021-11-25 14:40:59 --- 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.
 
2021-11-25 14:42:55 --- Starting Application using Java 11.0.13 on sontaeiiMacmini.localdomain with PID 98018 (/Users/sontaeil/Desktop/backend-springboot/build/classes/java/main started by sontaeil in /Users/sontaeil/Desktop/backend-springboot) 
2021-11-25 14:42:55 --- Running with Spring Boot v2.5.5, Spring v5.3.10 
2021-11-25 14:42:55 --- The following profiles are active: dev 
2021-11-25 14:42:55 --- Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2021-11-25 14:42:55 --- For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2021-11-25 14:42:56 --- Multiple Spring Data modules found, entering strict repository configuration mode! 
2021-11-25 14:42:56 --- Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
2021-11-25 14:42:56 --- Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces. 
2021-11-25 14:42:56 --- Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$24af9f22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2021-11-25 14:42:56 --- Supporting [WS-Addressing August 2004, WS-Addressing 1.0] 
2021-11-25 14:42:56 --- Tomcat initialized with port(s): 8080 (http) 
2021-11-25 14:42:56 --- Initializing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:42:56 --- Starting service [Tomcat] 
2021-11-25 14:42:56 --- Starting Servlet engine: [Apache Tomcat/9.0.53] 
2021-11-25 14:42:56 --- Initializing Spring embedded WebApplicationContext 
2021-11-25 14:42:56 --- Root WebApplicationContext: initialization completed in 1115 ms 
2021-11-25 14:42:56 --- Filter 'httpServletWrappingFilter' configured for use 
2021-11-25 14:42:56 --- HikariPool-1 - Starting... 
2021-11-25 14:42:57 --- HikariPool-1 - Start completed. 
2021-11-25 14:42:57 --- [JwtAuthTokenProvider.<init>():30] base64Secret: Z3J1bS5jYy5iYWNrZW5kLmp3dC5zZWN1cmUua2V5LlozSjFiUzVqWXk1aVlXTnJaVzVrTG1wM2RDNXpaV04xY21VdWEyVjU= 
2021-11-25 14:42:57 --- [JwtAuthTokenProvider.<init>():31] keyBytes: [103, 114, 117, 109, 46, 99, 99, 46, 98, 97, 99, 107, 101, 110, 100, 46, 106, 119, 116, 46, 115, 101, 99, 117, 114, 101, 46, 107, 101, 121, 46, 90, 51, 74, 49, 98, 83, 53, 106, 89, 121, 53, 105, 89, 87, 78, 114, 90, 87, 53, 107, 76, 109, 112, 51, 100, 67, 53, 122, 90, 87, 78, 49, 99, 109, 85, 117, 97, 50, 86, 53] 
2021-11-25 14:42:57 --- [SecurityConfig.passwordEncoder():79] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:42:57 --- [RedisConfiguration.redisConnectionFactory():23] host : localhost, port : 6379 
2021-11-25 14:42:57 --- [SecurityConfig.configure():43] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:42:57 --- Will secure Ant [pattern='/**', OPTIONS] with [] 
2021-11-25 14:42:57 --- Will secure Ant [pattern='/'] with [] 
2021-11-25 14:42:57 --- Will secure Ant [pattern='/front/**'] with [] 
2021-11-25 14:42:57 --- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ac3ab96, org.springframework.security.web.context.SecurityContextPersistenceFilter@60c5e548, org.springframework.security.web.header.HeaderWriterFilter@7c61e017, org.springframework.security.web.authentication.logout.LogoutFilter@6e8137ec, cc.grum.base.backendspringboot.config.security.JwtRequestFilter@46d49491, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@358b3981, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9175f2e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13aeefd3, org.springframework.security.web.session.SessionManagementFilter@728de8f8, org.springframework.security.web.access.ExceptionTranslationFilter@3b9c6dc4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b45f728] 
2021-11-25 14:42:57 --- Unable to start LiveReload server 
2021-11-25 14:42:57 --- Starting ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:42:57 --- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use 
2021-11-25 14:42:57 --- HikariPool-1 - Shutdown initiated... 
2021-11-25 14:42:57 --- HikariPool-1 - Shutdown completed. 
2021-11-25 14:42:57 --- Pausing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:42:57 --- Stopping service [Tomcat] 
2021-11-25 14:42:57 --- Stopping ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:42:57 --- Destroying ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:42:57 --- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2021-11-25 14:42:57 --- 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.
 
2021-11-25 14:46:11 ---- HikariPool-1 - Exception during pool initialization. 
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at cc.grum.base.backendspringboot.config.MyBatisConfig.dataSource(MyBatisConfig.java:36)
	at cc.grum.base.backendspringboot.config.MyBatisConfig$$EnhancerBySpringCGLIB$$82d30afb.CGLIB$dataSource$2(<generated>)
	at cc.grum.base.backendspringboot.config.MyBatisConfig$$EnhancerBySpringCGLIB$$82d30afb$$FastClassBySpringCGLIB$$656c7acb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at cc.grum.base.backendspringboot.config.MyBatisConfig$$EnhancerBySpringCGLIB$$82d30afb.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at cc.grum.base.backendspringboot.Application.main(Application.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:119)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:948)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:818)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:608)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 102 common frames omitted
2021-11-25 14:50:51 --- Starting Application using Java 11.0.13 on sontaeiiMacmini.localdomain with PID 99216 (/Users/sontaeil/Desktop/backend-springboot/build/classes/java/main started by sontaeil in /Users/sontaeil/Desktop/backend-springboot) 
2021-11-25 14:50:51 --- Running with Spring Boot v2.5.5, Spring v5.3.10 
2021-11-25 14:50:51 --- The following profiles are active: dev 
2021-11-25 14:50:51 --- Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2021-11-25 14:50:51 --- For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2021-11-25 14:50:52 --- Multiple Spring Data modules found, entering strict repository configuration mode! 
2021-11-25 14:50:52 --- Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
2021-11-25 14:50:52 --- Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces. 
2021-11-25 14:50:52 --- Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6092b413] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2021-11-25 14:50:52 --- Supporting [WS-Addressing August 2004, WS-Addressing 1.0] 
2021-11-25 14:50:52 --- Tomcat initialized with port(s): 8080 (http) 
2021-11-25 14:50:52 --- Initializing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:50:52 --- Starting service [Tomcat] 
2021-11-25 14:50:52 --- Starting Servlet engine: [Apache Tomcat/9.0.53] 
2021-11-25 14:50:52 --- Initializing Spring embedded WebApplicationContext 
2021-11-25 14:50:52 --- Root WebApplicationContext: initialization completed in 1347 ms 
2021-11-25 14:50:52 --- Filter 'httpServletWrappingFilter' configured for use 
2021-11-25 14:50:53 --- HikariPool-1 - Starting... 
2021-11-25 14:50:53 --- HikariPool-1 - Start completed. 
2021-11-25 14:50:53 --- [JwtAuthTokenProvider.<init>():30] base64Secret: Z3J1bS5jYy5iYWNrZW5kLmp3dC5zZWN1cmUua2V5LlozSjFiUzVqWXk1aVlXTnJaVzVrTG1wM2RDNXpaV04xY21VdWEyVjU= 
2021-11-25 14:50:53 --- [JwtAuthTokenProvider.<init>():31] keyBytes: [103, 114, 117, 109, 46, 99, 99, 46, 98, 97, 99, 107, 101, 110, 100, 46, 106, 119, 116, 46, 115, 101, 99, 117, 114, 101, 46, 107, 101, 121, 46, 90, 51, 74, 49, 98, 83, 53, 106, 89, 121, 53, 105, 89, 87, 78, 114, 90, 87, 53, 107, 76, 109, 112, 51, 100, 67, 53, 122, 90, 87, 78, 49, 99, 109, 85, 117, 97, 50, 86, 53] 
2021-11-25 14:50:53 --- [SecurityConfig.passwordEncoder():79] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:50:53 --- [RedisConfiguration.redisConnectionFactory():23] host : localhost, port : 6379 
2021-11-25 14:50:53 --- [SecurityConfig.configure():43] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START LOG 
2021-11-25 14:50:53 --- Will secure Ant [pattern='/**', OPTIONS] with [] 
2021-11-25 14:50:53 --- Will secure Ant [pattern='/'] with [] 
2021-11-25 14:50:53 --- Will secure Ant [pattern='/front/**'] with [] 
2021-11-25 14:50:53 --- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a3d0b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@370758ed, org.springframework.security.web.header.HeaderWriterFilter@459aa12, org.springframework.security.web.authentication.logout.LogoutFilter@67e5dadb, cc.grum.base.backendspringboot.config.security.JwtRequestFilter@229acb86, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1615ec8f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b042a1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@788b4cc9, org.springframework.security.web.session.SessionManagementFilter@399d8108, org.springframework.security.web.access.ExceptionTranslationFilter@5482ce03, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@309860ce] 
2021-11-25 14:50:53 --- Unable to start LiveReload server 
2021-11-25 14:50:53 --- Starting ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:50:53 --- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use 
2021-11-25 14:50:54 --- HikariPool-1 - Shutdown initiated... 
2021-11-25 14:50:54 --- HikariPool-1 - Shutdown completed. 
2021-11-25 14:50:54 --- Pausing ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:50:54 --- Stopping service [Tomcat] 
2021-11-25 14:50:54 --- Stopping ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:50:54 --- Destroying ProtocolHandler ["http-nio-8080"] 
2021-11-25 14:50:54 --- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2021-11-25 14:50:54 --- 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.
 
